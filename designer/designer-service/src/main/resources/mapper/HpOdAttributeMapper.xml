<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neusoft.designer.service.mapper.HpOdAttributeMapper">
  <resultMap id="BaseResultMap" type="com.neusoft.designer.service.domain.HpOdAttribute">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="GID" jdbcType="CHAR" property="gid" />
    <result column="HP_OD_CLASS_GID" jdbcType="CHAR" property="hpOdClassGid" />
    <result column="SEQ" jdbcType="DECIMAL" property="seq" />
    <result column="CODE" jdbcType="VARCHAR" property="code" />
    <result column="FIELD_NAME" jdbcType="VARCHAR" property="fieldName" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="DISPLAY_NAME" jdbcType="VARCHAR" property="displayName" />
    <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
    <result column="DATA_TYPE" jdbcType="DECIMAL" property="dataType" />
    <result column="TYPE_VALUE" jdbcType="VARCHAR" property="typeValue" />
    <result column="IS_FIXEDLENGTH" jdbcType="DECIMAL" property="isFixedlength" typeHandler="com.neusoft.core.dao.wrapper.BooleanTypeHandler" />
    <result column="ATTR_LENGTH" jdbcType="DECIMAL" property="attrLength" />
    <result column="ATTR_PRECISION" jdbcType="DECIMAL" property="attrPrecision" />
    <result column="MAX_VALUE" jdbcType="VARCHAR" property="maxValue" />
    <result column="MIN_VALUE" jdbcType="VARCHAR" property="minValue" />
    <result column="DEFAULT_VALUE" jdbcType="VARCHAR" property="defaultValue" />
    <result column="IS_REQUIRED" jdbcType="DECIMAL" property="isRequired" typeHandler="com.neusoft.core.dao.wrapper.BooleanTypeHandler" />
    <result column="IS_READONLY" jdbcType="DECIMAL" property="isReadonly" typeHandler="com.neusoft.core.dao.wrapper.BooleanTypeHandler" />
    <result column="IS_UNIQUE" jdbcType="DECIMAL" property="isUnique" typeHandler="com.neusoft.core.dao.wrapper.BooleanTypeHandler" />
    <result column="IS_DATAFILTER" jdbcType="DECIMAL" property="isDatafilter" typeHandler="com.neusoft.core.dao.wrapper.BooleanTypeHandler" />
    <result column="CREATE_BY" jdbcType="VARCHAR" property="createBy" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_BY" jdbcType="VARCHAR" property="updateBy" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="IS_DELETE" jdbcType="DECIMAL" property="delete" typeHandler="com.neusoft.core.dao.wrapper.BooleanTypeHandler" />
    <result column="IS_ACTIVE" jdbcType="DECIMAL" property="active" typeHandler="com.neusoft.core.dao.wrapper.BooleanTypeHandler" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isFixedlengthCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isRequiredCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isReadonlyCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isUniqueCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isDatafilterCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.deleteCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.activeCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isFixedlengthCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isRequiredCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isReadonlyCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isUniqueCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.isDatafilterCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.deleteCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.activeCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler} and #{criterion.secondValue,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    GID, HP_OD_CLASS_GID, SEQ, CODE, FIELD_NAME, NAME, DISPLAY_NAME, DESCRIPTION, DATA_TYPE, 
    TYPE_VALUE, IS_FIXEDLENGTH, ATTR_LENGTH, ATTR_PRECISION, MAX_VALUE, MIN_VALUE, DEFAULT_VALUE, 
    IS_REQUIRED, IS_READONLY, IS_UNIQUE, IS_DATAFILTER, CREATE_BY, CREATE_TIME, UPDATE_BY, 
    UPDATE_TIME, IS_DELETE, IS_ACTIVE
  </sql>
  <select id="selectByExample" parameterType="com.neusoft.designer.service.domain.HpOdAttributeExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from HP_OD_ATTRIBUTE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from HP_OD_ATTRIBUTE
    where GID = #{gid,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from HP_OD_ATTRIBUTE
    where GID = #{gid,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.neusoft.designer.service.domain.HpOdAttributeExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from HP_OD_ATTRIBUTE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neusoft.designer.service.domain.HpOdAttribute">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="gid" order="BEFORE" resultType="java.lang.String">
      select SYS_GUID() from dual
    </selectKey>
    insert into HP_OD_ATTRIBUTE (GID, HP_OD_CLASS_GID, SEQ, 
      CODE, FIELD_NAME, NAME, 
      DISPLAY_NAME, DESCRIPTION, DATA_TYPE, 
      TYPE_VALUE, IS_FIXEDLENGTH, 
      ATTR_LENGTH, ATTR_PRECISION, MAX_VALUE, 
      MIN_VALUE, DEFAULT_VALUE, IS_REQUIRED, 
      IS_READONLY, 
      IS_UNIQUE, 
      IS_DATAFILTER, 
      CREATE_BY, CREATE_TIME, UPDATE_BY, 
      UPDATE_TIME, IS_DELETE, 
      IS_ACTIVE
      )
    values (#{gid,jdbcType=CHAR}, #{hpOdClassGid,jdbcType=CHAR}, #{seq,jdbcType=DECIMAL}, 
      #{code,jdbcType=VARCHAR}, #{fieldName,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{displayName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{dataType,jdbcType=DECIMAL}, 
      #{typeValue,jdbcType=VARCHAR}, #{isFixedlength,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}, 
      #{attrLength,jdbcType=DECIMAL}, #{attrPrecision,jdbcType=DECIMAL}, #{maxValue,jdbcType=VARCHAR}, 
      #{minValue,jdbcType=VARCHAR}, #{defaultValue,jdbcType=VARCHAR}, #{isRequired,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}, 
      #{isReadonly,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}, 
      #{isUnique,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}, 
      #{isDatafilter,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}, 
      #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{delete,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}, 
      #{active,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.neusoft.designer.service.domain.HpOdAttribute">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="gid" order="BEFORE" resultType="java.lang.String">
      select SYS_GUID() from dual
    </selectKey>
    insert into HP_OD_ATTRIBUTE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      GID,
      <if test="hpOdClassGid != null">
        HP_OD_CLASS_GID,
      </if>
      <if test="seq != null">
        SEQ,
      </if>
      <if test="code != null">
        CODE,
      </if>
      <if test="fieldName != null">
        FIELD_NAME,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="displayName != null">
        DISPLAY_NAME,
      </if>
      <if test="description != null">
        DESCRIPTION,
      </if>
      <if test="dataType != null">
        DATA_TYPE,
      </if>
      <if test="typeValue != null">
        TYPE_VALUE,
      </if>
      <if test="isFixedlength != null">
        IS_FIXEDLENGTH,
      </if>
      <if test="attrLength != null">
        ATTR_LENGTH,
      </if>
      <if test="attrPrecision != null">
        ATTR_PRECISION,
      </if>
      <if test="maxValue != null">
        MAX_VALUE,
      </if>
      <if test="minValue != null">
        MIN_VALUE,
      </if>
      <if test="defaultValue != null">
        DEFAULT_VALUE,
      </if>
      <if test="isRequired != null">
        IS_REQUIRED,
      </if>
      <if test="isReadonly != null">
        IS_READONLY,
      </if>
      <if test="isUnique != null">
        IS_UNIQUE,
      </if>
      <if test="isDatafilter != null">
        IS_DATAFILTER,
      </if>
      <if test="createBy != null">
        CREATE_BY,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateBy != null">
        UPDATE_BY,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="delete != null">
        IS_DELETE,
      </if>
      <if test="active != null">
        IS_ACTIVE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{gid,jdbcType=CHAR},
      <if test="hpOdClassGid != null">
        #{hpOdClassGid,jdbcType=CHAR},
      </if>
      <if test="seq != null">
        #{seq,jdbcType=DECIMAL},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="fieldName != null">
        #{fieldName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="displayName != null">
        #{displayName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="dataType != null">
        #{dataType,jdbcType=DECIMAL},
      </if>
      <if test="typeValue != null">
        #{typeValue,jdbcType=VARCHAR},
      </if>
      <if test="isFixedlength != null">
        #{isFixedlength,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      </if>
      <if test="attrLength != null">
        #{attrLength,jdbcType=DECIMAL},
      </if>
      <if test="attrPrecision != null">
        #{attrPrecision,jdbcType=DECIMAL},
      </if>
      <if test="maxValue != null">
        #{maxValue,jdbcType=VARCHAR},
      </if>
      <if test="minValue != null">
        #{minValue,jdbcType=VARCHAR},
      </if>
      <if test="defaultValue != null">
        #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="isRequired != null">
        #{isRequired,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      </if>
      <if test="isReadonly != null">
        #{isReadonly,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      </if>
      <if test="isUnique != null">
        #{isUnique,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      </if>
      <if test="isDatafilter != null">
        #{isDatafilter,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delete != null">
        #{delete,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      </if>
      <if test="active != null">
        #{active,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neusoft.designer.service.domain.HpOdAttributeExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from HP_OD_ATTRIBUTE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update HP_OD_ATTRIBUTE
    <set>
      <if test="record.gid != null">
        GID = #{record.gid,jdbcType=CHAR},
      </if>
      <if test="record.hpOdClassGid != null">
        HP_OD_CLASS_GID = #{record.hpOdClassGid,jdbcType=CHAR},
      </if>
      <if test="record.seq != null">
        SEQ = #{record.seq,jdbcType=DECIMAL},
      </if>
      <if test="record.code != null">
        CODE = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.fieldName != null">
        FIELD_NAME = #{record.fieldName,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.displayName != null">
        DISPLAY_NAME = #{record.displayName,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.dataType != null">
        DATA_TYPE = #{record.dataType,jdbcType=DECIMAL},
      </if>
      <if test="record.typeValue != null">
        TYPE_VALUE = #{record.typeValue,jdbcType=VARCHAR},
      </if>
      <if test="record.isFixedlength != null">
        IS_FIXEDLENGTH = #{record.isFixedlength,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      </if>
      <if test="record.attrLength != null">
        ATTR_LENGTH = #{record.attrLength,jdbcType=DECIMAL},
      </if>
      <if test="record.attrPrecision != null">
        ATTR_PRECISION = #{record.attrPrecision,jdbcType=DECIMAL},
      </if>
      <if test="record.maxValue != null">
        MAX_VALUE = #{record.maxValue,jdbcType=VARCHAR},
      </if>
      <if test="record.minValue != null">
        MIN_VALUE = #{record.minValue,jdbcType=VARCHAR},
      </if>
      <if test="record.defaultValue != null">
        DEFAULT_VALUE = #{record.defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="record.isRequired != null">
        IS_REQUIRED = #{record.isRequired,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      </if>
      <if test="record.isReadonly != null">
        IS_READONLY = #{record.isReadonly,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      </if>
      <if test="record.isUnique != null">
        IS_UNIQUE = #{record.isUnique,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      </if>
      <if test="record.isDatafilter != null">
        IS_DATAFILTER = #{record.isDatafilter,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      </if>
      <if test="record.createBy != null">
        CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delete != null">
        IS_DELETE = #{record.delete,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      </if>
      <if test="record.active != null">
        IS_ACTIVE = #{record.active,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update HP_OD_ATTRIBUTE
    set GID = #{record.gid,jdbcType=CHAR},
      HP_OD_CLASS_GID = #{record.hpOdClassGid,jdbcType=CHAR},
      SEQ = #{record.seq,jdbcType=DECIMAL},
      CODE = #{record.code,jdbcType=VARCHAR},
      FIELD_NAME = #{record.fieldName,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      DISPLAY_NAME = #{record.displayName,jdbcType=VARCHAR},
      DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      DATA_TYPE = #{record.dataType,jdbcType=DECIMAL},
      TYPE_VALUE = #{record.typeValue,jdbcType=VARCHAR},
      IS_FIXEDLENGTH = #{record.isFixedlength,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      ATTR_LENGTH = #{record.attrLength,jdbcType=DECIMAL},
      ATTR_PRECISION = #{record.attrPrecision,jdbcType=DECIMAL},
      MAX_VALUE = #{record.maxValue,jdbcType=VARCHAR},
      MIN_VALUE = #{record.minValue,jdbcType=VARCHAR},
      DEFAULT_VALUE = #{record.defaultValue,jdbcType=VARCHAR},
      IS_REQUIRED = #{record.isRequired,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      IS_READONLY = #{record.isReadonly,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      IS_UNIQUE = #{record.isUnique,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      IS_DATAFILTER = #{record.isDatafilter,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      IS_DELETE = #{record.delete,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      IS_ACTIVE = #{record.active,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neusoft.designer.service.domain.HpOdAttribute">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update HP_OD_ATTRIBUTE
    <set>
      <if test="hpOdClassGid != null">
        HP_OD_CLASS_GID = #{hpOdClassGid,jdbcType=CHAR},
      </if>
      <if test="seq != null">
        SEQ = #{seq,jdbcType=DECIMAL},
      </if>
      <if test="code != null">
        CODE = #{code,jdbcType=VARCHAR},
      </if>
      <if test="fieldName != null">
        FIELD_NAME = #{fieldName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="displayName != null">
        DISPLAY_NAME = #{displayName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
      <if test="dataType != null">
        DATA_TYPE = #{dataType,jdbcType=DECIMAL},
      </if>
      <if test="typeValue != null">
        TYPE_VALUE = #{typeValue,jdbcType=VARCHAR},
      </if>
      <if test="isFixedlength != null">
        IS_FIXEDLENGTH = #{isFixedlength,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      </if>
      <if test="attrLength != null">
        ATTR_LENGTH = #{attrLength,jdbcType=DECIMAL},
      </if>
      <if test="attrPrecision != null">
        ATTR_PRECISION = #{attrPrecision,jdbcType=DECIMAL},
      </if>
      <if test="maxValue != null">
        MAX_VALUE = #{maxValue,jdbcType=VARCHAR},
      </if>
      <if test="minValue != null">
        MIN_VALUE = #{minValue,jdbcType=VARCHAR},
      </if>
      <if test="defaultValue != null">
        DEFAULT_VALUE = #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="isRequired != null">
        IS_REQUIRED = #{isRequired,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      </if>
      <if test="isReadonly != null">
        IS_READONLY = #{isReadonly,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      </if>
      <if test="isUnique != null">
        IS_UNIQUE = #{isUnique,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      </if>
      <if test="isDatafilter != null">
        IS_DATAFILTER = #{isDatafilter,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      </if>
      <if test="createBy != null">
        CREATE_BY = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delete != null">
        IS_DELETE = #{delete,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      </if>
      <if test="active != null">
        IS_ACTIVE = #{active,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      </if>
    </set>
    where GID = #{gid,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neusoft.designer.service.domain.HpOdAttribute">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update HP_OD_ATTRIBUTE
    set HP_OD_CLASS_GID = #{hpOdClassGid,jdbcType=CHAR},
      SEQ = #{seq,jdbcType=DECIMAL},
      CODE = #{code,jdbcType=VARCHAR},
      FIELD_NAME = #{fieldName,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      DISPLAY_NAME = #{displayName,jdbcType=VARCHAR},
      DESCRIPTION = #{description,jdbcType=VARCHAR},
      DATA_TYPE = #{dataType,jdbcType=DECIMAL},
      TYPE_VALUE = #{typeValue,jdbcType=VARCHAR},
      IS_FIXEDLENGTH = #{isFixedlength,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      ATTR_LENGTH = #{attrLength,jdbcType=DECIMAL},
      ATTR_PRECISION = #{attrPrecision,jdbcType=DECIMAL},
      MAX_VALUE = #{maxValue,jdbcType=VARCHAR},
      MIN_VALUE = #{minValue,jdbcType=VARCHAR},
      DEFAULT_VALUE = #{defaultValue,jdbcType=VARCHAR},
      IS_REQUIRED = #{isRequired,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      IS_READONLY = #{isReadonly,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      IS_UNIQUE = #{isUnique,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      IS_DATAFILTER = #{isDatafilter,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      CREATE_BY = #{createBy,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      IS_DELETE = #{delete,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler},
      IS_ACTIVE = #{active,jdbcType=DECIMAL,typeHandler=com.neusoft.core.dao.wrapper.BooleanTypeHandler}
    where GID = #{gid,jdbcType=CHAR}
  </update>
</mapper>
package com.neusoft.designer.service.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

import com.neusoft.core.dao.GenExample;

public class PObjLayoutExample extends GenExample {

    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table P_OBJ_LAYOUT
     *
     * @mbg.generated
     */
    protected String         orderByClause;

    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table P_OBJ_LAYOUT
     *
     * @mbg.generated
     */
    protected boolean        distinct;

    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table P_OBJ_LAYOUT
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table P_OBJ_LAYOUT
     *
     * @mbg.generated
     */
    public PObjLayoutExample(){
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table P_OBJ_LAYOUT
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table P_OBJ_LAYOUT
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table P_OBJ_LAYOUT
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table P_OBJ_LAYOUT
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table P_OBJ_LAYOUT
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table P_OBJ_LAYOUT
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table P_OBJ_LAYOUT
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table P_OBJ_LAYOUT
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table P_OBJ_LAYOUT
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table P_OBJ_LAYOUT
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table P_OBJ_LAYOUT
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {

        protected List<Criterion> dfCriteria;

        protected List<Criterion> activeCriteria;

        protected List<Criterion> deleteCriteria;

        protected List<Criterion> allCriteria;

        protected List<Criterion> criteria;

        protected GeneratedCriteria(){
            super();
            criteria = new ArrayList<Criterion>();
            dfCriteria = new ArrayList<Criterion>();
            activeCriteria = new ArrayList<Criterion>();
            deleteCriteria = new ArrayList<Criterion>();
        }

        public List<Criterion> getDfCriteria() {
            return dfCriteria;
        }

        protected void addDfCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            dfCriteria.add(new Criterion(condition, value, "org.neusoft.obj.core.interceptor.BooleanTypeHandler"));
            allCriteria = null;
        }

        protected void addDfCriterion(String condition, Boolean value1, Boolean value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            dfCriteria.add(new Criterion(condition, value1, value2,
                                         "org.neusoft.obj.core.interceptor.BooleanTypeHandler"));
            allCriteria = null;
        }

        public List<Criterion> getActiveCriteria() {
            return activeCriteria;
        }

        protected void addActiveCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            activeCriteria.add(new Criterion(condition, value, "org.neusoft.obj.core.interceptor.BooleanTypeHandler"));
            allCriteria = null;
        }

        protected void addActiveCriterion(String condition, Boolean value1, Boolean value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            activeCriteria.add(new Criterion(condition, value1, value2,
                                             "org.neusoft.obj.core.interceptor.BooleanTypeHandler"));
            allCriteria = null;
        }

        public List<Criterion> getDeleteCriteria() {
            return deleteCriteria;
        }

        protected void addDeleteCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            deleteCriteria.add(new Criterion(condition, value, "org.neusoft.obj.core.interceptor.BooleanTypeHandler"));
            allCriteria = null;
        }

        protected void addDeleteCriterion(String condition, Boolean value1, Boolean value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            deleteCriteria.add(new Criterion(condition, value1, value2,
                                             "org.neusoft.obj.core.interceptor.BooleanTypeHandler"));
            allCriteria = null;
        }

        public boolean isValid() {
            return criteria.size() > 0 || dfCriteria.size() > 0 || activeCriteria.size() > 0
                   || deleteCriteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            if (allCriteria == null) {
                allCriteria = new ArrayList<Criterion>();
                allCriteria.addAll(criteria);
                allCriteria.addAll(dfCriteria);
                allCriteria.addAll(activeCriteria);
                allCriteria.addAll(deleteCriteria);
            }
            return allCriteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
            allCriteria = null;
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andGidIsNull() {
            addCriterion("GID is null");
            return (Criteria) this;
        }

        public Criteria andGidIsNotNull() {
            addCriterion("GID is not null");
            return (Criteria) this;
        }

        public Criteria andGidEqualTo(String value) {
            addCriterion("GID =", value, "gid");
            return (Criteria) this;
        }

        public Criteria andGidNotEqualTo(String value) {
            addCriterion("GID <>", value, "gid");
            return (Criteria) this;
        }

        public Criteria andGidGreaterThan(String value) {
            addCriterion("GID >", value, "gid");
            return (Criteria) this;
        }

        public Criteria andGidGreaterThanOrEqualTo(String value) {
            addCriterion("GID >=", value, "gid");
            return (Criteria) this;
        }

        public Criteria andGidLessThan(String value) {
            addCriterion("GID <", value, "gid");
            return (Criteria) this;
        }

        public Criteria andGidLessThanOrEqualTo(String value) {
            addCriterion("GID <=", value, "gid");
            return (Criteria) this;
        }

        public Criteria andGidLike(String value) {
            addCriterion("GID like", value, "gid");
            return (Criteria) this;
        }

        public Criteria andGidNotLike(String value) {
            addCriterion("GID not like", value, "gid");
            return (Criteria) this;
        }

        public Criteria andGidIn(List<String> values) {
            addCriterion("GID in", values, "gid");
            return (Criteria) this;
        }

        public Criteria andGidNotIn(List<String> values) {
            addCriterion("GID not in", values, "gid");
            return (Criteria) this;
        }

        public Criteria andGidBetween(String value1, String value2) {
            addCriterion("GID between", value1, value2, "gid");
            return (Criteria) this;
        }

        public Criteria andGidNotBetween(String value1, String value2) {
            addCriterion("GID not between", value1, value2, "gid");
            return (Criteria) this;
        }

        public Criteria andPObjObjectGidIsNull() {
            addCriterion("P_OBJ_OBJECT_GID is null");
            return (Criteria) this;
        }

        public Criteria andPObjObjectGidIsNotNull() {
            addCriterion("P_OBJ_OBJECT_GID is not null");
            return (Criteria) this;
        }

        public Criteria andPObjObjectGidEqualTo(String value) {
            addCriterion("P_OBJ_OBJECT_GID =", value, "pObjObjectGid");
            return (Criteria) this;
        }

        public Criteria andPObjObjectGidNotEqualTo(String value) {
            addCriterion("P_OBJ_OBJECT_GID <>", value, "pObjObjectGid");
            return (Criteria) this;
        }

        public Criteria andPObjObjectGidGreaterThan(String value) {
            addCriterion("P_OBJ_OBJECT_GID >", value, "pObjObjectGid");
            return (Criteria) this;
        }

        public Criteria andPObjObjectGidGreaterThanOrEqualTo(String value) {
            addCriterion("P_OBJ_OBJECT_GID >=", value, "pObjObjectGid");
            return (Criteria) this;
        }

        public Criteria andPObjObjectGidLessThan(String value) {
            addCriterion("P_OBJ_OBJECT_GID <", value, "pObjObjectGid");
            return (Criteria) this;
        }

        public Criteria andPObjObjectGidLessThanOrEqualTo(String value) {
            addCriterion("P_OBJ_OBJECT_GID <=", value, "pObjObjectGid");
            return (Criteria) this;
        }

        public Criteria andPObjObjectGidLike(String value) {
            addCriterion("P_OBJ_OBJECT_GID like", value, "pObjObjectGid");
            return (Criteria) this;
        }

        public Criteria andPObjObjectGidNotLike(String value) {
            addCriterion("P_OBJ_OBJECT_GID not like", value, "pObjObjectGid");
            return (Criteria) this;
        }

        public Criteria andPObjObjectGidIn(List<String> values) {
            addCriterion("P_OBJ_OBJECT_GID in", values, "pObjObjectGid");
            return (Criteria) this;
        }

        public Criteria andPObjObjectGidNotIn(List<String> values) {
            addCriterion("P_OBJ_OBJECT_GID not in", values, "pObjObjectGid");
            return (Criteria) this;
        }

        public Criteria andPObjObjectGidBetween(String value1, String value2) {
            addCriterion("P_OBJ_OBJECT_GID between", value1, value2, "pObjObjectGid");
            return (Criteria) this;
        }

        public Criteria andPObjObjectGidNotBetween(String value1, String value2) {
            addCriterion("P_OBJ_OBJECT_GID not between", value1, value2, "pObjObjectGid");
            return (Criteria) this;
        }

        public Criteria andLayoutNameIsNull() {
            addCriterion("LAYOUT_NAME is null");
            return (Criteria) this;
        }

        public Criteria andLayoutNameIsNotNull() {
            addCriterion("LAYOUT_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andLayoutNameEqualTo(String value) {
            addCriterion("LAYOUT_NAME =", value, "layoutName");
            return (Criteria) this;
        }

        public Criteria andLayoutNameNotEqualTo(String value) {
            addCriterion("LAYOUT_NAME <>", value, "layoutName");
            return (Criteria) this;
        }

        public Criteria andLayoutNameGreaterThan(String value) {
            addCriterion("LAYOUT_NAME >", value, "layoutName");
            return (Criteria) this;
        }

        public Criteria andLayoutNameGreaterThanOrEqualTo(String value) {
            addCriterion("LAYOUT_NAME >=", value, "layoutName");
            return (Criteria) this;
        }

        public Criteria andLayoutNameLessThan(String value) {
            addCriterion("LAYOUT_NAME <", value, "layoutName");
            return (Criteria) this;
        }

        public Criteria andLayoutNameLessThanOrEqualTo(String value) {
            addCriterion("LAYOUT_NAME <=", value, "layoutName");
            return (Criteria) this;
        }

        public Criteria andLayoutNameLike(String value) {
            addCriterion("LAYOUT_NAME like", value, "layoutName");
            return (Criteria) this;
        }

        public Criteria andLayoutNameNotLike(String value) {
            addCriterion("LAYOUT_NAME not like", value, "layoutName");
            return (Criteria) this;
        }

        public Criteria andLayoutNameIn(List<String> values) {
            addCriterion("LAYOUT_NAME in", values, "layoutName");
            return (Criteria) this;
        }

        public Criteria andLayoutNameNotIn(List<String> values) {
            addCriterion("LAYOUT_NAME not in", values, "layoutName");
            return (Criteria) this;
        }

        public Criteria andLayoutNameBetween(String value1, String value2) {
            addCriterion("LAYOUT_NAME between", value1, value2, "layoutName");
            return (Criteria) this;
        }

        public Criteria andLayoutNameNotBetween(String value1, String value2) {
            addCriterion("LAYOUT_NAME not between", value1, value2, "layoutName");
            return (Criteria) this;
        }

        public Criteria andLayoutTypeIsNull() {
            addCriterion("LAYOUT_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andLayoutTypeIsNotNull() {
            addCriterion("LAYOUT_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andLayoutTypeEqualTo(Short value) {
            addCriterion("LAYOUT_TYPE =", value, "layoutType");
            return (Criteria) this;
        }

        public Criteria andLayoutTypeNotEqualTo(Short value) {
            addCriterion("LAYOUT_TYPE <>", value, "layoutType");
            return (Criteria) this;
        }

        public Criteria andLayoutTypeGreaterThan(Short value) {
            addCriterion("LAYOUT_TYPE >", value, "layoutType");
            return (Criteria) this;
        }

        public Criteria andLayoutTypeGreaterThanOrEqualTo(Short value) {
            addCriterion("LAYOUT_TYPE >=", value, "layoutType");
            return (Criteria) this;
        }

        public Criteria andLayoutTypeLessThan(Short value) {
            addCriterion("LAYOUT_TYPE <", value, "layoutType");
            return (Criteria) this;
        }

        public Criteria andLayoutTypeLessThanOrEqualTo(Short value) {
            addCriterion("LAYOUT_TYPE <=", value, "layoutType");
            return (Criteria) this;
        }

        public Criteria andLayoutTypeIn(List<Short> values) {
            addCriterion("LAYOUT_TYPE in", values, "layoutType");
            return (Criteria) this;
        }

        public Criteria andLayoutTypeNotIn(List<Short> values) {
            addCriterion("LAYOUT_TYPE not in", values, "layoutType");
            return (Criteria) this;
        }

        public Criteria andLayoutTypeBetween(Short value1, Short value2) {
            addCriterion("LAYOUT_TYPE between", value1, value2, "layoutType");
            return (Criteria) this;
        }

        public Criteria andLayoutTypeNotBetween(Short value1, Short value2) {
            addCriterion("LAYOUT_TYPE not between", value1, value2, "layoutType");
            return (Criteria) this;
        }

        public Criteria andDfIsNull() {
            addCriterion("IS_DEFAULT is null");
            return (Criteria) this;
        }

        public Criteria andDfIsNotNull() {
            addCriterion("IS_DEFAULT is not null");
            return (Criteria) this;
        }

        public Criteria andDfEqualTo(Boolean value) {
            addDfCriterion("IS_DEFAULT =", value, "df");
            return (Criteria) this;
        }

        public Criteria andDfNotEqualTo(Boolean value) {
            addDfCriterion("IS_DEFAULT <>", value, "df");
            return (Criteria) this;
        }

        public Criteria andDfGreaterThan(Boolean value) {
            addDfCriterion("IS_DEFAULT >", value, "df");
            return (Criteria) this;
        }

        public Criteria andDfGreaterThanOrEqualTo(Boolean value) {
            addDfCriterion("IS_DEFAULT >=", value, "df");
            return (Criteria) this;
        }

        public Criteria andDfLessThan(Boolean value) {
            addDfCriterion("IS_DEFAULT <", value, "df");
            return (Criteria) this;
        }

        public Criteria andDfLessThanOrEqualTo(Boolean value) {
            addDfCriterion("IS_DEFAULT <=", value, "df");
            return (Criteria) this;
        }

        public Criteria andDfIn(List<Boolean> values) {
            addDfCriterion("IS_DEFAULT in", values, "df");
            return (Criteria) this;
        }

        public Criteria andDfNotIn(List<Boolean> values) {
            addDfCriterion("IS_DEFAULT not in", values, "df");
            return (Criteria) this;
        }

        public Criteria andDfBetween(Boolean value1, Boolean value2) {
            addDfCriterion("IS_DEFAULT between", value1, value2, "df");
            return (Criteria) this;
        }

        public Criteria andDfNotBetween(Boolean value1, Boolean value2) {
            addDfCriterion("IS_DEFAULT not between", value1, value2, "df");
            return (Criteria) this;
        }

        public Criteria andFieldsIsNull() {
            addCriterion("FIELDS is null");
            return (Criteria) this;
        }

        public Criteria andFieldsIsNotNull() {
            addCriterion("FIELDS is not null");
            return (Criteria) this;
        }

        public Criteria andFieldsEqualTo(String value) {
            addCriterion("FIELDS =", value, "fields");
            return (Criteria) this;
        }

        public Criteria andFieldsNotEqualTo(String value) {
            addCriterion("FIELDS <>", value, "fields");
            return (Criteria) this;
        }

        public Criteria andFieldsGreaterThan(String value) {
            addCriterion("FIELDS >", value, "fields");
            return (Criteria) this;
        }

        public Criteria andFieldsGreaterThanOrEqualTo(String value) {
            addCriterion("FIELDS >=", value, "fields");
            return (Criteria) this;
        }

        public Criteria andFieldsLessThan(String value) {
            addCriterion("FIELDS <", value, "fields");
            return (Criteria) this;
        }

        public Criteria andFieldsLessThanOrEqualTo(String value) {
            addCriterion("FIELDS <=", value, "fields");
            return (Criteria) this;
        }

        public Criteria andFieldsLike(String value) {
            addCriterion("FIELDS like", value, "fields");
            return (Criteria) this;
        }

        public Criteria andFieldsNotLike(String value) {
            addCriterion("FIELDS not like", value, "fields");
            return (Criteria) this;
        }

        public Criteria andFieldsIn(List<String> values) {
            addCriterion("FIELDS in", values, "fields");
            return (Criteria) this;
        }

        public Criteria andFieldsNotIn(List<String> values) {
            addCriterion("FIELDS not in", values, "fields");
            return (Criteria) this;
        }

        public Criteria andFieldsBetween(String value1, String value2) {
            addCriterion("FIELDS between", value1, value2, "fields");
            return (Criteria) this;
        }

        public Criteria andFieldsNotBetween(String value1, String value2) {
            addCriterion("FIELDS not between", value1, value2, "fields");
            return (Criteria) this;
        }

        public Criteria andJsondataIsNull() {
            addCriterion("JSONDATA is null");
            return (Criteria) this;
        }

        public Criteria andJsondataIsNotNull() {
            addCriterion("JSONDATA is not null");
            return (Criteria) this;
        }

        public Criteria andJsondataEqualTo(String value) {
            addCriterion("JSONDATA =", value, "jsondata");
            return (Criteria) this;
        }

        public Criteria andJsondataNotEqualTo(String value) {
            addCriterion("JSONDATA <>", value, "jsondata");
            return (Criteria) this;
        }

        public Criteria andJsondataGreaterThan(String value) {
            addCriterion("JSONDATA >", value, "jsondata");
            return (Criteria) this;
        }

        public Criteria andJsondataGreaterThanOrEqualTo(String value) {
            addCriterion("JSONDATA >=", value, "jsondata");
            return (Criteria) this;
        }

        public Criteria andJsondataLessThan(String value) {
            addCriterion("JSONDATA <", value, "jsondata");
            return (Criteria) this;
        }

        public Criteria andJsondataLessThanOrEqualTo(String value) {
            addCriterion("JSONDATA <=", value, "jsondata");
            return (Criteria) this;
        }

        public Criteria andJsondataLike(String value) {
            addCriterion("JSONDATA like", value, "jsondata");
            return (Criteria) this;
        }

        public Criteria andJsondataNotLike(String value) {
            addCriterion("JSONDATA not like", value, "jsondata");
            return (Criteria) this;
        }

        public Criteria andJsondataIn(List<String> values) {
            addCriterion("JSONDATA in", values, "jsondata");
            return (Criteria) this;
        }

        public Criteria andJsondataNotIn(List<String> values) {
            addCriterion("JSONDATA not in", values, "jsondata");
            return (Criteria) this;
        }

        public Criteria andJsondataBetween(String value1, String value2) {
            addCriterion("JSONDATA between", value1, value2, "jsondata");
            return (Criteria) this;
        }

        public Criteria andJsondataNotBetween(String value1, String value2) {
            addCriterion("JSONDATA not between", value1, value2, "jsondata");
            return (Criteria) this;
        }

        public Criteria andCreateByIsNull() {
            addCriterion("CREATE_BY is null");
            return (Criteria) this;
        }

        public Criteria andCreateByIsNotNull() {
            addCriterion("CREATE_BY is not null");
            return (Criteria) this;
        }

        public Criteria andCreateByEqualTo(String value) {
            addCriterion("CREATE_BY =", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotEqualTo(String value) {
            addCriterion("CREATE_BY <>", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByGreaterThan(String value) {
            addCriterion("CREATE_BY >", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByGreaterThanOrEqualTo(String value) {
            addCriterion("CREATE_BY >=", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByLessThan(String value) {
            addCriterion("CREATE_BY <", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByLessThanOrEqualTo(String value) {
            addCriterion("CREATE_BY <=", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByLike(String value) {
            addCriterion("CREATE_BY like", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotLike(String value) {
            addCriterion("CREATE_BY not like", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByIn(List<String> values) {
            addCriterion("CREATE_BY in", values, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotIn(List<String> values) {
            addCriterion("CREATE_BY not in", values, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByBetween(String value1, String value2) {
            addCriterion("CREATE_BY between", value1, value2, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotBetween(String value1, String value2) {
            addCriterion("CREATE_BY not between", value1, value2, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("CREATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("CREATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_TIME =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_TIME <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("CREATE_TIME >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_TIME >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterionForJDBCDate("CREATE_TIME <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_TIME <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterionForJDBCDate("CREATE_TIME in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("CREATE_TIME not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATE_TIME between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATE_TIME not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateByIsNull() {
            addCriterion("UPDATE_BY is null");
            return (Criteria) this;
        }

        public Criteria andUpdateByIsNotNull() {
            addCriterion("UPDATE_BY is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateByEqualTo(String value) {
            addCriterion("UPDATE_BY =", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotEqualTo(String value) {
            addCriterion("UPDATE_BY <>", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByGreaterThan(String value) {
            addCriterion("UPDATE_BY >", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByGreaterThanOrEqualTo(String value) {
            addCriterion("UPDATE_BY >=", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByLessThan(String value) {
            addCriterion("UPDATE_BY <", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByLessThanOrEqualTo(String value) {
            addCriterion("UPDATE_BY <=", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByLike(String value) {
            addCriterion("UPDATE_BY like", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotLike(String value) {
            addCriterion("UPDATE_BY not like", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByIn(List<String> values) {
            addCriterion("UPDATE_BY in", values, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotIn(List<String> values) {
            addCriterion("UPDATE_BY not in", values, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByBetween(String value1, String value2) {
            addCriterion("UPDATE_BY between", value1, value2, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotBetween(String value1, String value2) {
            addCriterion("UPDATE_BY not between", value1, value2, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("UPDATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("UPDATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_TIME =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_TIME <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("UPDATE_TIME >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_TIME >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterionForJDBCDate("UPDATE_TIME <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_TIME <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterionForJDBCDate("UPDATE_TIME in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("UPDATE_TIME not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UPDATE_TIME between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UPDATE_TIME not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andActiveIsNull() {
            addCriterion("IS_ACTIVE is null");
            return (Criteria) this;
        }

        public Criteria andActiveIsNotNull() {
            addCriterion("IS_ACTIVE is not null");
            return (Criteria) this;
        }

        public Criteria andActiveEqualTo(Boolean value) {
            addActiveCriterion("IS_ACTIVE =", value, "active");
            return (Criteria) this;
        }

        public Criteria andActiveNotEqualTo(Boolean value) {
            addActiveCriterion("IS_ACTIVE <>", value, "active");
            return (Criteria) this;
        }

        public Criteria andActiveGreaterThan(Boolean value) {
            addActiveCriterion("IS_ACTIVE >", value, "active");
            return (Criteria) this;
        }

        public Criteria andActiveGreaterThanOrEqualTo(Boolean value) {
            addActiveCriterion("IS_ACTIVE >=", value, "active");
            return (Criteria) this;
        }

        public Criteria andActiveLessThan(Boolean value) {
            addActiveCriterion("IS_ACTIVE <", value, "active");
            return (Criteria) this;
        }

        public Criteria andActiveLessThanOrEqualTo(Boolean value) {
            addActiveCriterion("IS_ACTIVE <=", value, "active");
            return (Criteria) this;
        }

        public Criteria andActiveIn(List<Boolean> values) {
            addActiveCriterion("IS_ACTIVE in", values, "active");
            return (Criteria) this;
        }

        public Criteria andActiveNotIn(List<Boolean> values) {
            addActiveCriterion("IS_ACTIVE not in", values, "active");
            return (Criteria) this;
        }

        public Criteria andActiveBetween(Boolean value1, Boolean value2) {
            addActiveCriterion("IS_ACTIVE between", value1, value2, "active");
            return (Criteria) this;
        }

        public Criteria andActiveNotBetween(Boolean value1, Boolean value2) {
            addActiveCriterion("IS_ACTIVE not between", value1, value2, "active");
            return (Criteria) this;
        }

        public Criteria andDeleteIsNull() {
            addCriterion("IS_DELETE is null");
            return (Criteria) this;
        }

        public Criteria andDeleteIsNotNull() {
            addCriterion("IS_DELETE is not null");
            return (Criteria) this;
        }

        public Criteria andDeleteEqualTo(Boolean value) {
            addDeleteCriterion("IS_DELETE =", value, "delete");
            return (Criteria) this;
        }

        public Criteria andDeleteNotEqualTo(Boolean value) {
            addDeleteCriterion("IS_DELETE <>", value, "delete");
            return (Criteria) this;
        }

        public Criteria andDeleteGreaterThan(Boolean value) {
            addDeleteCriterion("IS_DELETE >", value, "delete");
            return (Criteria) this;
        }

        public Criteria andDeleteGreaterThanOrEqualTo(Boolean value) {
            addDeleteCriterion("IS_DELETE >=", value, "delete");
            return (Criteria) this;
        }

        public Criteria andDeleteLessThan(Boolean value) {
            addDeleteCriterion("IS_DELETE <", value, "delete");
            return (Criteria) this;
        }

        public Criteria andDeleteLessThanOrEqualTo(Boolean value) {
            addDeleteCriterion("IS_DELETE <=", value, "delete");
            return (Criteria) this;
        }

        public Criteria andDeleteIn(List<Boolean> values) {
            addDeleteCriterion("IS_DELETE in", values, "delete");
            return (Criteria) this;
        }

        public Criteria andDeleteNotIn(List<Boolean> values) {
            addDeleteCriterion("IS_DELETE not in", values, "delete");
            return (Criteria) this;
        }

        public Criteria andDeleteBetween(Boolean value1, Boolean value2) {
            addDeleteCriterion("IS_DELETE between", value1, value2, "delete");
            return (Criteria) this;
        }

        public Criteria andDeleteNotBetween(Boolean value1, Boolean value2) {
            addDeleteCriterion("IS_DELETE not between", value1, value2, "delete");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table P_OBJ_LAYOUT
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria(){
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table P_OBJ_LAYOUT
     *
     * @mbg.generated
     */
    public static class Criterion {

        private String  condition;

        private Object  value;

        private Object  secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String  typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition){
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler){
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value){
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler){
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue){
            this(condition, value, secondValue, null);
        }
    }
}
